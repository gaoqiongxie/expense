<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 <mapper namespace="com.xw.restful.dao.FmlExpenseDao">
 	<resultMap type="com.xw.restful.domain.FmlExpense" id="fmlExpense">
		<id column="id" property="recordId" jdbcType="INTEGER" />
		<result column="member_id" property="expenseId" jdbcType="INTEGER" />
		<result column="payer_id" property="payerId" jdbcType="INTEGER" />
		<result column="expense" property="expense" jdbcType="FLOAT" />
		<result column="expense_type" property="expenseType" jdbcType="INTEGER" />
		<result column="expense_desc" property="expenseDesc" jdbcType="VARCHAR" />
		<result column="expense_time" property="expenseTime" jdbcType="TIMESTAMP" />
		<result column="data_state" property="dataState" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<resultMap type="com.xw.restful.domain.ExpenseType" id="expenseType">
		<id column="type_id" property="typeId" jdbcType="INTEGER" />
		<result column="type_name" property="typeName" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.xw.restful.domain.vo.ExpenseVO" id="fmlExpenseVO">
		<id column="id" property="recordId" jdbcType="INTEGER" />
		<result column="expense_id" property="expenseId" jdbcType="INTEGER" />
		<result column="payer_id" property="payerId" jdbcType="INTEGER" />
		<result column="expense_name" property="expenseName" jdbcType="INTEGER" />
		<result column="payer" property="payer" jdbcType="VARCHAR" />
		<result column="expense" property="expense" jdbcType="FLOAT" />
		<result column="expense_desc" property="expenseDesc" jdbcType="VARCHAR" />
		<result column="expense_Time" property="expenseTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="data_state" property="dataState" jdbcType="VARCHAR" />
		<result column="type_id" property="typeId" jdbcType="INTEGER" />
		<result column="type_name" property="typeName" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.xw.restful.domain.vo.GroupExpenseVO" id="groupExpenseVO">
		<result column="groupKey" property="groupKey" jdbcType="VARCHAR" />
		<result column="month" property="month" jdbcType="VARCHAR" />
		<collection property="groupValue"  ofType="com.xw.restful.domain.vo.GroupValue">
  	  		<id column="name" property="name" jdbcType="VARCHAR" />
    		<result column="expense_sum" property="expenseSum" jdbcType="FLOAT" />
		</collection>
	</resultMap>
	
	<resultMap type="com.xw.restful.domain.vo.MonthExpense" id="monthExpense">
		<result column="month" property="month" jdbcType="VARCHAR" />
		<result column="expense_name" property="expenseName" jdbcType="INTEGER" />
		<result column="payer" property="payer" jdbcType="VARCHAR" />
		<result column="expense" property="expense" jdbcType="FLOAT" />
		<result column="type_name" property="typeName" jdbcType="VARCHAR" />
	</resultMap>
	
	<insert id="insert" parameterType="fmlExpense">
		insert into fml_expense(member_id,payer_id,expense,expense_type,expense_desc,expense_time)
		value(#{expenseId},#{payerId},#{expense},#{expenseType},#{expenseDesc},#{expenseTime})
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List" >
		insert into fml_expense(member_id,payer_id,expense,expense_type,expense_desc,expense_time)
		values <foreach collection ="list" item="fmlExpense" index= "index" separator =",">
                (#{fmlExpense.expenseId},#{fmlExpense.payerId},#{fmlExpense.expense},#{fmlExpense.expenseType},#{fmlExpense.expenseDesc},#{fmlExpense.expenseTime})
            </foreach >
	</insert>
	
	<update id="update" parameterType="fmlExpense">
		update fml_expense set member_id=#{expenseId}, payer_id=#{payerId}, expense=#{expense}, 
		expense_type=#{expenseType}, expense_desc=#{expenseDesc}, expense_time=#{expenseTime} 
		where id=#{recordId}
	</update>
	
	<update id="updateDataStateTodel" parameterType="java.util.List">
		update fml_expense set data_state='del'
		where id in 
			<foreach collection="list" index="index" item="id" open="(" separator="," close=")">
					#{id}
			</foreach>
	</update>
	
	<select id="countExpenses" resultType="INTEGER">
		select count(1)
		from fml_expense d left join fml_member m on d.member_id=m.id 
		left join fml_member p on d.payer_id=p.id 
		left join expense_type t on d.expense_type=t.type_id
		where 1=1
			<if test="expenseId != null">
				and d.member_id=#{expenseId}
			</if>
			<if test="payerId != null">
				and d.payer_id=#{payerId}
			</if>
			<if test="typeId != null">
				and d.expense_type=#{typeId}
			</if>
			<if test="startTime != null">
				and d.expense_time&gt;= #{startTime}
			</if>
			<if test="endTime != null">
				and d.expense_time&lt;=#{endTime}
			</if> 
			<if test="expenseDesc != null">
				and d.expense_desc like CONCAT('%',#{expenseDesc},'%')
			</if>
		order by update_time asc 
	</select>
	<select id="expenseVO" resultMap="fmlExpenseVO">
		select d.id id, m.id expense_id,m.name expense_name,p.id payer_id,p.name payer,
			expense, expense_desc, expense_time, update_time, d.data_state,t.type_id,t.type_name
		from fml_expense d left join fml_member m on d.member_id=m.id 
		left join fml_member p on d.payer_id=p.id 
		left join expense_type t on d.expense_type=t.type_id
		where 1=1 
			<if test="expenseId != null">
				and d.member_id=#{expenseId}
			</if>
			<if test="payerId != null">
				and d.payer_id=#{payerId}
			</if>
			<if test="typeId != null">
				and d.expense_type=#{typeId}
			</if>
			<if test="startTime != null">
				and d.expense_time&gt;=#{startTime}
			</if>
			<if test="endTime != null">
				and d.expense_time&lt;=#{endTime}
			</if>
			<if test="expenseDesc != null">
				and d.expense_desc like CONCAT('%',#{expenseDesc},'%')
			</if>
		order by expense_time desc , id desc
		<if test="pageSize != null and pageSize != 0">
			limit #{page},#{pageSize}
		</if>
	</select>
	
	<select id="getDtoRecordById" resultMap="fmlExpenseVO">
		select d.id id, m.id expense_id ,m.name expense_name,p.id payer_id,p.name payer,
			expense,expense_desc,expense_time ,update_time, d.data_state,t.type_id,t.type_name
		from fml_expense d left join fml_member m on d.member_id=m.id 
		left join expense_type t on d.expense_type=t.type_id
		left join fml_member p on d.payer_id=p.id 
		where d.id=#{id}
	</select>

	<select id="sumExpenseMonth" resultType="FLOAT">
		select sum(expense)
		from fml_expense 
		where data_state='init' and DATE_FORMAT( expense_time, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
	</select>
	
	<select id="groupExpenses" resultMap="groupExpenseVO">
		select <choose>
				<when test="groupKey=='expenseId'">
					m.name
				</when>
				<when test="groupKey=='payerId'">
					p.name
				</when>
				<otherwise>
					t.type_name
				</otherwise>
		</choose>
			name,sum(expense) expense_sum,date_format(expense_time, '%Y-%m') month,#{groupKey} groupKey
		from fml_expense d 
			left join fml_member m on d.member_id=m.id
			left join fml_member p on d.payer_id=p.id  
			left join expense_type t on d.expense_type=t.type_id
		where data_state='init' 
			<if test="expenseId != null and expenseId != ''">
				and d.member_id=#{expenseId}
			</if>
			<if test="payerId != null and payerId != ''">
				and d.payer_id=#{payerId}
			</if>
			<if test="typeId != null and typeId != ''">
				and d.expense_type=#{typeId}
			</if>
			<if test="startTime != null and startTime != ''">
				and d.expense_time&gt;=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and d.expense_time&lt;=#{endTime}
			</if>
		group by 
		<choose>
			<when test="groupKey=='expenseId'">
				d.member_id
			</when>
			<when test="groupKey=='payerId'">
				d.payer_id
			</when>
			<otherwise>
				d.expense_type
			</otherwise>
		</choose>
		<if test="groupByMonth">
			,date_format(expense_time, '%Y-%m')
		</if>
	</select>
	
	<select id="monthExpense" resultMap="monthExpense">
		select p.name payer, m.name expense_name, t.type_name type_name,sum(expense) expense,date_format(expense_time, '%Y-%m') month
		from fml_expense d 
			left join fml_member m on d.member_id=m.id
			left join fml_member p on d.payer_id=p.id  
			left join expense_type t on d.expense_type=t.type_id
		where data_state='init'
		group by date_format(expense_time, '%Y-%m'),d.payer_id,d.member_id,d.expense_type
	</select>
</mapper>